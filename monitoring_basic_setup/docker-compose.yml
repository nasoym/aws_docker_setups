version: '3'
services:

  grafana:
    image: grafana/grafana:4.3.2
    restart: unless-stopped
    ports: 
      - 3000:3000
    networks:
      - monitoring
    volumes:
      - grafana_scripted_dashboards:/usr/share/grafana/public/dashboards/:ro
    # - ./grafana.ini:/var/lib/grafana/grafana.ini
    environment:
      - GF_DASHBOARDS_JSON_ENABLED=true
    #  - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,mtanda-heatmap-epoch-panel,mtanda-histogram-panel,grafana-piechart-panel,jdbranham-diagram-panel
    # command: "--config /var/lib/grafana/grafana.ini"

  consul:
    image: gliderlabs/consul-server 
    restart: unless-stopped
    networks:
      - monitoring
    ports:
      - 8500:8500
    command: -bootstrap -advertise ${HOST_IP_ADDRESS}

  consul_registrator:
    image: gliderlabs/registrator 
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock 
    command: -ip ${HOST_IP_ADDRESS} consul://consul:8500

  prometheus:
    image: prom/prometheus:v1.7.1
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - prometheus:/prometheus_config:ro
    ports:
      - 9090:9090
    command: -config.file=/prometheus_config/prometheus.yml -query.staleness-delta=10s

  pushgateway:
    image: prom/pushgateway:v0.4.0
    restart: unless-stopped
    networks:
      - monitoring
    ports:
      - 9091:9091

  discovered_pushgateway:
    image: prom/pushgateway:v0.4.0
    restart: unless-stopped
    environment:
      - SERVICE_TAGS=monitored
    ports:
      - 9091

  discovered_bss:
    image: nasoym/bss_docker
    restart: unless-stopped
    environment:
      - SERVICE_NAME=bss_bss
      - SERVICE_TAGS=monitored,path=prometheus
    ports:
      - 8080
    volumes:
      - ./bss_handlers:/bss/handlers 

  cadvisor:
    image: google/cadvisor:v0.26.1
    restart: unless-stopped
    privileged: true
    networks:
      - monitoring
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    ports:
      - 8080:8080

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    ports:
      - 9100:9100
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - node_exporter:/node_exporter_text:ro
    command: -collector.procfs /host/proc -collector.sysfs /host/sys -collectors.enabled "loadavg,stat,textfile" --collector.textfile.directory /node_exporter_text/
    #-collectors.enabled "tcpstat,sockstat" 
    # -collectors.enabled "time,conntrack" 

networks:
  monitoring:

volumes:
  node_exporter:
    driver_opts:
      o: bind
      device: "${PWD}/node_exporter_text"
  prometheus:
    driver_opts:
      o: bind
      device: "${PWD}"
  grafana_scripted_dashboards:
    driver_opts:
      o: bind
      device: "${PWD}/scripted_dashboards"

