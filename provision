#!/usr/bin/env bash

set -f
set -o pipefail
set -o errexit
set -o nounset
trap 'echo "$0: line ${LINENO}: exiting because of error";exit 1' ERR

function run_ssh_commands() {
  ec2 ssh $(ec2 get-ip $@)
}

while getopts "h" options; do case $options in
  h) exit ;;
esac; done; shift $((OPTIND - 1))

if [[ "$#" -eq 0 ]];then
  exit

elif [[ "$#" -ge 3 ]];then
  command="$1"; shift
  echo "$@" | tr ' ' '\n' | parallel --no-run-if-empty  "$0 $command {} </dev/null"

elif [[ "$#" -ge 1 ]] && [[ -p /dev/stdin ]]; then
  command="$1"; shift
  cat | parallel --no-run-if-empty "$0 $command {} </dev/null"

elif [[ "$1" == "ssh" ]];then shift
  run_ssh_commands $@

elif [[ "$1" == "docker" ]];then shift
  run_ssh_commands $@ <<EOF
if ! hash docker; then 
  sudo yum install -y docker
  sudo service docker start
  sudo usermod -a -G docker ec2-user
  sudo pip install docker-compose
fi
EOF

elif [[ "$1" == "update" ]];then shift
  run_ssh_commands $@ <<EOF
sudo yum update 
EOF

elif [[ "$1" == "tools" ]];then shift
  run_ssh_commands $@ <<EOF
sudo yum install -y git jq httpd-tools
EOF

else
  echo "unkown command: $@" >&2
  exit 1

fi

