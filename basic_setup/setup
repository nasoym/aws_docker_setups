#!/usr/bin/env bash

set -eufo pipefail

project_name="$(basename $(dirname $(realpath $0)))"

ec2 list running \
  | jq -e "(map(select(.Name==\"${project_name}_monitoring\")) | length) == 1" >/dev/null || {
  echo "${project_name}_monitoring" | ec2 create  ;
}

  ec2 ssh ${project_name}_monitoring <<EOF
if ! hash docker; then 
  sudo yum install -y docker
  sudo service docker start
  sudo usermod -a -G docker ec2-user
  sudo pip install docker-compose
fi
EOF

  ec2 ssh ${project_name}_monitoring <<EOF
  mkdir -p ${project_name}
EOF

  ec2 ssh ${project_name}_monitoring <<EOF
  cd ${project_name}
  docker-compose rm -sf grafana
  sudo rm grafana.ini
  sudo rm grafana_dashboard_01.json
EOF

ec2 scp ${project_name}_monitoring ${project_name} add_datasources
ec2 scp ${project_name}_monitoring ${project_name} grafana.ini
ec2 scp ${project_name}_monitoring ${project_name} grafana_dashboard_01.json
ec2 scp ${project_name}_monitoring ${project_name} prometheus.yml
ec2 scp ${project_name}_monitoring ${project_name} docker-compose.yml

  ec2 ssh ${project_name}_monitoring <<EOF
  cd ${project_name}


  docker-compose up -d --remove-orphans

  for i in {1..20}; do 
    curl -s "http://localhost:3000" >/dev/null && break
    sleep 1
  done
  curl -s "http://localhost:3000" >/dev/null || { echo "grafana did not respond!" >&2; exit 1;}
  ./add_datasources

  # docker rm -f cadvisor
  # sudo docker run \
  #   --detach=true \
  #   --publish=8080:8080 \
  #   --name=cadvisor \
  #   --volume=/:/rootfs:ro \
  #   --volume=/var/run:/var/run:rw \
  #   --volume=/sys:/sys:ro \
  #   --volume=/var/lib/docker/:/var/lib/docker:ro \
  #   google/cadvisor:v0.26.1

EOF


